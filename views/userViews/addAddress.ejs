<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Address</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css"
        rel="stylesheet">
         <!-- tab logo -->
  <link rel="icon" type="image/png" href="/images/logo/tabLogo.png">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background-color: #f4f6f9;
        }

        .address-container {
            max-width: 600px;
            margin: 50px auto;
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .form-label {
            font-weight: 600;
        }

        .save-address-btn {
            background-color: #4a90e2;
            color: white;
        }

        .error-message {
            color: red;
            font-size: 0.9rem;
            margin-top: 5px;
        }

        .is-invalid {
            border-color: red !important;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="address-container">
            <h2 class="mb-4">Add New Address</h2>
            <form id="addressForm" novalidate>
                <!-- Address Type -->
                <div class="mb-3">
                    <label class="form-label">Address Type*</label>
                    <div class="d-flex gap-3">
                        <input type="radio" name="addressType" id="home" value="Home" class="btn-check" checked>
                        <label class="btn btn-outline-primary" for="home">Home</label>

                        <input type="radio" name="addressType" id="work" value="Work" class="btn-check">
                        <label class="btn btn-outline-primary" for="work">Work</label>

                        <input type="radio" name="addressType" id="other" value="Other" class="btn-check">
                        <label class="btn btn-outline-primary" for="other">Other</label>
                    </div>
                </div>

                <!-- Full Name -->
                <div class="mb-3">
                    <label class="form-label">Full Name*</label>
                    <input type="text" id="fullName" class="form-control" placeholder="Enter full name"
                        aria-describedby="fullNameError" required>
                    <div class="error-message" id="fullNameError" role="alert"></div>
                </div>

                <!-- Phone Number -->
                <div class="mb-3">
                    <label class="form-label">Phone Number*</label>
                    <input type="tel" id="phone" class="form-control" placeholder="Enter phone number"
                        aria-describedby="phoneError" required>
                    <div class="error-message" id="phoneError" role="alert"></div>
                </div>

                <!-- Alternative Phone Number -->
                <div class="mb-3">
                    <label class="form-label">Alternative Number</label>
                    <input type="tel" id="altphone" class="form-control" placeholder="Enter alternative phone number"
                        aria-describedby="altphoneError">
                    <div class="error-message" id="altphoneError" role="alert"></div>
                </div>

                <!-- City -->
                <div class="mb-3">
                    <label class="form-label">City*</label>
                    <input type="text" id="city" class="form-control" placeholder="Enter city"
                        aria-describedby="cityError" required>
                    <div class="error-message" id="cityError" role="alert"></div>
                </div>

                <!-- Landmark -->
                <div class="mb-3">
                    <label class="form-label">Landmark</label>
                    <input type="text" id="landmark" class="form-control" placeholder="Enter landmark (optional)">
                </div>

                <!-- State -->
                <div class="mb-3">
                    <label class="form-label">State*</label>
                    <select id="state" class="form-select" aria-describedby="stateError" required>
                        <option selected disabled value="">Select your state</option>
                        <option>Andhra Pradesh</option>
                        <option>Arunachal Pradesh</option>
                        <option>Assam</option>
                        <option>Bihar</option>
                        <option>Chhattisgarh</option>
                        <option>Goa</option>
                        <option>Gujarat</option>
                        <option>Haryana</option>
                        <option>Himachal Pradesh</option>
                        <option>Jharkhand</option>
                        <option>Karnataka</option>
                        <option>Kerala</option>
                        <option>Madhya Pradesh</option>
                        <option>Maharashtra</option>
                        <option>Manipur</option>
                        <option>Meghalaya</option>
                        <option>Mizoram</option>
                        <option>Nagaland</option>
                        <option>Odisha</option>
                        <option>Punjab</option>
                        <option>Rajasthan</option>
                        <option>Sikkim</option>
                        <option>Tamil Nadu</option>
                        <option>Telangana</option>
                        <option>Tripura</option>
                        <option>Uttar Pradesh</option>
                    </select>
                    <div class="error-message" id="stateError" role="alert"></div>
                </div>

                <!-- Pincode -->
                <div class="mb-3">
                    <label class="form-label">Postal Code*</label>
                    <input type="text" id="pincode" class="form-control" placeholder="Enter postal code"
                        aria-describedby="pincodeError" required>
                    <div class="error-message" id="pincodeError" role="alert"></div>
                </div>

                <!-- Default Address Selection -->
                <div class="default-address-section mb-3">
                    <label class="form-label d-block">Default Address</label>
                    <div class="d-flex gap-3">
                        <input type="radio" name="defaultAddress" id="setDefault" value="true" class="btn-check">
                        <label class="btn btn-outline-success" for="setDefault">Set as Default</label>

                        <input type="radio" name="defaultAddress" id="notDefault" value="false" class="btn-check"
                            checked>
                        <label class="btn btn-outline-secondary" for="notDefault">Not Default</label>
                    </div>
                </div>


                <!-- Address Details -->
                <div class="mb-3">
                    <label class="form-label">Address Details*</label>
                    <textarea id="addressDetails" class="form-control" rows="3"
                        placeholder="Enter address details"></textarea>
                </div>

                <button type="submit" class="btn save-address-btn w-100">Save Address</button>
            </form>
        </div>
    </div>

    <script>
        document.getElementById("addressForm").addEventListener("submit", async (event) => {
            event.preventDefault();
            const errors = {};

            // Gather form values
            const formData = {
                addressType: document.querySelector("input[name='addressType']:checked").value,
                fullName: document.getElementById("fullName").value.trim(),
                phone: document.getElementById("phone").value.trim(),
                altphone: document.getElementById("altphone").value.trim(),
                city: document.getElementById("city").value.trim(),
                state: document.getElementById("state").value,
                pincode: document.getElementById("pincode").value.trim(),
                landmark: document.getElementById("landmark").value.trim(),
                addressDetails: document.getElementById("addressDetails").value.trim(),
                isDefault: document.querySelector("input[name='defaultAddress']:checked").value === 'true'
            };

            const isValid = () => {
                let isFormValid = true;

                if (!/^[a-zA-Z\s'-]{3,50}$/.test(formData.fullName)) {
                    errors.fullName = "Full Name must be 3-50 characters and only contain alphabets, spaces, hyphens, and apostrophes.";
                    isFormValid = false;
                }
                if (!/^\d{10}$/.test(formData.phone)) {
                    errors.phone = "Phone Number must be exactly 10 digits.";
                    isFormValid = false;
                }
                if (formData.altphone && !/^\d{10}$/.test(formData.altphone)) {
                    errors.altphone = "Alternative Phone Number must be exactly 10 digits.";
                    isFormValid = false;
                }
                if (!/^[a-zA-Z\s]{3,}$/.test(formData.city)) {
                    errors.city = "City must contain at least 3 alphabetic characters.";
                    isFormValid = false;
                }
                if (!formData.state || formData.state === "Select your state") {
                    errors.state = "Please select a valid state.";
                    isFormValid = false;
                }
                if (!/^\d{6}$/.test(formData.pincode)) {
                    errors.pincode = "Pincode must be exactly 6 digits.";
                    isFormValid = false;
                }

                // Display errors
                document.querySelectorAll(".error-message").forEach((element) => (element.textContent = ""));
                Object.keys(errors).forEach((field) => {
                    const errorElement = document.getElementById(`${field}Error`);
                    if (errorElement) {
                        errorElement.textContent = errors[field];
                        document.getElementById(field).classList.add("is-invalid");
                    }
                });

                return isFormValid;
            };

            if (isValid()) {
                try {
                    const response = await fetch("/addAddress", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(formData),
                    });
                    if (response.ok) {
                        Swal.fire("Success", "Address saved successfully!", "success").then(() => {
                            window.location.href = "/addresses"; // Redirect to the addresses page
                        });
                        document.getElementById("addressForm").reset();
                    } else {
                        Swal.fire("Error", "Failed to save address. Try again later.", "error");
                    }
                } catch (error) {
                    Swal.fire("Error", "Something went wrong. Please try again.", "error");
                }
            }

            // Reset error styles on input
            document.querySelectorAll("input, select, textarea").forEach((field) => {
                field.addEventListener("input", () => {
                    field.classList.remove("is-invalid");
                    const errorElement = document.getElementById(`${field.id}Error`);
                    if (errorElement) errorElement.textContent = "";
                });
            });
        });
    </script>
</body>

</html>