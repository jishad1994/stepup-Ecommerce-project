<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="/styles/css/otpverification.css">
</head>

<body>
    <div class="otp-container">
        <h2>Verify OTP</h2>
        <p>Enter the OTP sent to your email address.</p>
        <form id="otpForm">
            <div class="otp-input">
                <input type="text" id="otp" maxlength="6" placeholder="Enter OTP" required>
                <span id="otpError" class="error-message"></span>
            </div>
            <button type="submit">Verify</button>
        </form>
        <p id="timer">Resend OTP in: <span id="countdown">60</span> seconds</p>
        <button id="resendOtp" disabled>Resend OTP</button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.2/dist/sweetalert2.min.js"></script>
    <script>
        // Timer settings and functionality
        const otpForm = document.getElementById("otpForm");
        const otpInput = document.getElementById("otp");
        const otpError = document.getElementById("otpError");
        const resendOtpButton = document.getElementById("resendOtp");
        const countdownElement = document.getElementById("countdown");

        // let countdown = 60;
        // let timer;

        function startCountdown() {
            let countdown = 60;
            let timer;
            resendOtpButton.disabled = true;
            countdownElement.textContent = countdown;

            timer = setInterval(() => {
                countdown -= 1;
                countdownElement.textContent = countdown;

                if (countdown <= 0) {
                    clearInterval(timer);
                    resendOtpButton.disabled = false;
                }
            }, 1000);
        }

        function showAlert(type, title, text) {
            Swal.fire({
                icon: type,
                title: title,
                text: text,
                timer: 2000,
                showConfirmButton: false,
            });
        }

        otpForm.addEventListener("submit", async (e) => {
            e.preventDefault();
            otpError.textContent = "";

            const otp = otpInput.value.trim();

            if (otp.length !== 6 || isNaN(otp)) {
                otpError.textContent = "Please enter a valid 6-digit OTP.";
                return;
            }

            try {
                const response = await fetch("/verifyResetPasswordOTP", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ OTP: otp }),
                });

                const result = await response.json();
                // if success message comes
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: "success",
                        text: 'OTP verification Successfull.now please reset your password',
                        timer: 2000,
                        showConfirmButton: true,
                    }).then(() => {

                        window.location.href = "/resetPasswordFinal";
                        return
                    })
                } else {

                    Swal.fire({
                        icon: 'error',
                        title: "failed",
                        text: `${result.message}`,


                    })

                }
            } catch (err) {
                showAlert("error", "Error!", "An error occurred. Please try again.");
                console.error(err);
            }
        });

        resendOtpButton.addEventListener("click", async () => {


            resendOtpButton.disabled = true;

            try {
                const response = await fetch("/passwordResetResendOTP", { method: "POST" });
                const result = await response.json();
                
                if (result.success) {
                    showAlert("success", "Sent!", "OTP Has Been Resent.");
                } else {
                    showAlert("error", "Failed!", result.message || "Unable to resend OTP.");
                }
                startCountdown();
            } catch (err) {
                showAlert("error", "Error!", "An error occurred. Please try again.");
                console.error(err);
            }
        });

        window.onload = startCountdown;
    </script>
</body>

</html>