<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
     <!-- tab logo -->
  <link rel="icon" type="image/png" href="/images/logo/tabLogo.png">

    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        body {
            background-color: #f4f6f9;
        }

        .order-history-container {
            max-width: 1100px;
            margin: 50px auto;
            background-color: rgb(255, 255, 255);
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .order-header {
            background-color: #4a90e2;
            color: white;
            padding: 20px;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .order-item {
            border-bottom: 1px solid #f2f2f2;
            padding: 15px 0;
            align-items: center;
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .order-status {
            font-weight: bold;
        }

        .order-status-pending {
            color: orange;
        }

        .order-status-processing {
            color: green;
        }

        .order-status-shipped {
            color: green;
        }

        .order-status-delivered {
            color: green;
        }

        .order-status-cancelled {
            color: red;
        }

        .order-status-returned,
        .order-status-return-request {
            color: yellow;
        }

        .order-status-return-request-Approved {
            color: rgb(0, 123, 4);
        }

        .order-status-return-request-Rejected {
            color: rgb(222, 5, 5);
        }

        .product-image {
            max-width: 100px;
            max-height: 100px;
            object-fit: cover;
            border-radius: 8px;
        }
    </style>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Mukta:300,400,700">
    <link rel="stylesheet" href="styles/fonts/icomoon/style.css">
    <link rel="stylesheet" href="styles/css/bootstrap.min.css">
    <link rel="stylesheet" href="styles/css/magnific-popup.css">
    <link rel="stylesheet" href="styles/css/jquery-ui.css">
    <link rel="stylesheet" href="styles/css/owl.carousel.min.css">
    <link rel="stylesheet" href="styles/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="styles/css/aos.css">
    <link rel="stylesheet" href="styles/css/style.css">

</head>

<body>
    <%- include("../partials/header") %>
        <div class="container">
            <div class="order-history-container">
                <div class="order-header">
                    <h2 class="mb-0">Order History</h2>
                </div>

                <% if (orders.length===0) { %>
                    <div class="p-3">
                        <h4>Your order history is empty.</h4>
                    </div>
                    <% } else { %>
                        <% orders.forEach((order)=> {
                            const createdDate = new Date(order.createdAt).toLocaleDateString("en-US", {
                            year: "numeric",
                            month: "long",
                            day: "numeric"
                            });

                            let statusClass = "";
                            switch (order.status) {
                            case "Pending": statusClass = "order-status-pending"; break;
                            case "Processing": statusClass = "order-status-processing"; break;
                            case "Shipped": statusClass = "order-status-shipped"; break;
                            case "Delivered": statusClass = "order-status-delivered"; break;
                            case "Cancelled": statusClass = "order-status-cancelled"; break;
                            case "Return Request": statusClass = "order-status-return-request"; break;
                            case "Return Request Approved": statusClass = "order-status-return-request-Approved"; break;
                            case "Return Request Rejected": statusClass = "order-status-return-request-Rejected"; break;
                            case "Returned": statusClass = "order-status-returned"; break;
                            default: statusClass = "order-status-unknown";
                            }
                            %>
                            <div class="p-3">
                                <div class="order-item row align-items-center">
                                    <div class="col-md-2">
                                        <strong>
                                            <%= order.orderId %>
                                        </strong>
                                    </div>
                                    <div class="col-md-2">
                                        <span>
                                            <%= createdDate %>
                                        </span>
                                    </div>
                                    <div class="col-md-2">
                                        <span class="order-status <%= statusClass %>">
                                            <%= order.status %>
                                        </span>
                                    </div>
                                    <div class="col-md-2">
                                        <strong>â‚¹ <%= order.totalPrice.toFixed() || "0.00" %></strong>
                                    </div>
                                    <div class="col-md-2 text-end">
                                        <button class="btn btn-sm btn-outline-primary"
                                            onclick="showDetails('<%=order._id%>')">View Details</button>
                                    </div>
                                    <div class="col-md-2 text-end">
                                        <% if (order.status !=="Cancelled" && order.status !=="Delivered" &&![ "Shipped"
                                            , "Delivered" , "Cancelled" , "Return Request" ,"Return Request Approved"
                                            ,"Return Request Rejected", "Returned" ].includes(order.status) ) { %>
                                            <button class="btn btn-sm btn-outline-danger"
                                                onclick="cancelOrder(event,'<%=order._id%>')">Cancel Order</button>
                                            <% } %>
                                    </div>
                                </div>
                            </div>
                            <% }) %>
                                <% } %>
            </div>
        </div>
        <%- include("../partials/footer")%>

            <!-- Bootstrap JS -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
            <script src="scripts/jquery-3.3.1.min.js"></script>
            <script src="scripts/jquery-ui.js"></script>
            <script src="scripts/popper.min.js"></script>
            <script src="scripts/bootstrap.min.js"></script>
            <script src="scripts/owl.carousel.min.js"></script>
            <script src="scripts/jquery.magnific-popup.min.js"></script>
            <script src="scripts/aos.js"></script>
            <script src="scripts/main.js"></script>

            <script>


                //order details showing function
                const showDetails = async (_id) => {
                    try {

                        window.location.href = `/showDetails/${_id}`

                    } catch (error) {

                        console.log("internal server error");

                        Swal.fire({
                            icon: 'error',
                            title: 'unexpected error occured',
                            text: "",
                        });
                    }
                }


                //order cancellation function
                const cancelOrder = async (event, _id) => {

                    try {

                        Swal.fire({
                            icon: 'warning',
                            title: 'Do you want to cancel the order?',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, cancel it',
                            cancelButtonText: 'No, keep it',
                            reverseButtons: true
                        }).then(async (result) => {
                            if (result.isConfirmed) {
                                // cancellation logic
                                const response = await fetch(`/cancelOrder/${_id}`);
                                const data = await response.json();

                                if (data.success) {
                                    console.log("order cancellation successfull")
                                    Swal.fire({
                                        icon: 'warning',
                                        title: 'Your order has been cancelled.',
                                    }
                                    );
                                    setTimeout(() => location.reload(), 1500);
                                } else {

                                    Swal.fire({
                                        icon: 'error',
                                        title: 'cancellation failed',
                                        text: data.message,
                                    });
                                }

                            } else if (result.dismiss === Swal.DismissReason.cancel) {
                                Swal.fire(
                                    'Cancelled',
                                    'Your order is safe :)',
                                    'info'
                                );
                            }
                        });

                    } catch (error) {
                        console.log("internal server error");

                        Swal.fire({
                            icon: 'error',
                            title: 'unexpected error occured',
                            text: "",
                        });
                    }

                }



            </script>
</body>

</html>